MEMORY {
	ZP: start = $0080, size = $0080, file="";
        SYSRAM: start = $9000, size = $BF00-$9000, file = "";
	RAM: start   = $200, size = $BF00-$200, file = "";
	FILLER: start   = $C000, size = $2000, file = %O, fill=yes, fillval=$00;
	ROM: start     = $E000, size = $FFFA-$E000, file = %O, fill=yes, fillval=$EA;
	VECTORS: start  = $FFFA, size = $0006, file = %O;
}

SEGMENTS {
    ZEROPAGE: load = ZP,  type = zp,  define   = yes;
    DATA:     load = ROM, type = rw,  define   = yes, run = SYSRAM;
    BSS:      load = SYSRAM, type = bss, define   = yes;
    HEAP:     load = RAM, type = bss, optional = yes;
    STARTUP:  load = ROM, type = ro;
    ONCE:     load = ROM, type = ro,  optional = yes;
    CODE:     load = ROM, type = ro;
    RODATA:   load = ROM, type = ro;
    VECTORS:  load = VECTORS, type=ro;
}

FEATURES {
    STARTADDRESS: default = $E000;
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
SYMBOLS {
    __STACKSIZE__:  type = weak, value = $0800; # 2k stack
    __STACKSTART__: type = weak, value = $BEFF;
}

